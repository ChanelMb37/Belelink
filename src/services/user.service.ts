import { Injectable } from '@angular/core';
import { AngularFirestore } from '@angular/fire/compat/firestore';
import { Observable } from 'rxjs';
import { map } from 'rxjs/operators';

/**
 * ğŸ“Œ Service permettant de gÃ©rer les utilisateurs via Firestore.
 */
@Injectable({
  providedIn: 'root' // ğŸ”¥ Fournit ce service Ã  toute l'application.
})
export class UserService {
  constructor(private firestore: AngularFirestore) {} // ğŸ”¹ Injection de Firestore pour accÃ©der Ã  la base de donnÃ©es.

  /**
   * ğŸ“Œ RÃ©cupÃ¨re la liste des utilisateurs depuis Firestore.
   * @returns Un Observable contenant un tableau d'objets utilisateurs.
   */
  getUsers(): Observable<any[]> {
    return this.firestore.collection('users') // ğŸ”¥ RÃ©cupÃ©ration de la collection "users".
      .snapshotChanges() // ğŸ“Œ Ã‰coute les modifications en temps rÃ©el.
      .pipe(
        map(actions => 
          actions.map(a => {
            const data = a.payload.doc.data() as Record<string, any>; // ğŸ”¹ RÃ©cupÃ©ration des donnÃ©es de chaque utilisateur.
            const id = a.payload.doc.id; // ğŸ”¹ RÃ©cupÃ©ration de l'identifiant du document.
            return { id, ...data }; // ğŸ”¥ Retourne un objet utilisateur avec son ID Firestore.
          })
        )
      );
  }
}
